@model TagVModel
@{
    int indexer = (int)ViewBag.index;
}
<div class="table-responsive">
    <table class="table table-bordered table-striped">
        <thead class="text-center">
            <tr>
                <th>#</th>
                <th>الاسم بالعربي</th>
                <th>الاسم بالانجليزي </th>
                <th>الصورة</th>
                <th>تفعيل/تعطيل</th>
                <th> </th>


            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Tags)
            {
                <tr>

                    <td>
                        @indexer
                    </td>
                    <td>
                        @item.NameAr
                    </td>
                    <td>@item.NameEn</td>
                    <td><img src="@(!(string.IsNullOrEmpty(item.Image))?"/Attachments/Images/"+item.Image:"/images/audio/1.jpg")" class="circle image_table img-avatar"></td>
                    <td class="text-center">

                        <a href="#" title="@(item.IsActive?"تعطيل":"تفعيل")" class="@(item.IsActive?"icon_circle_link":"icon_check_link")" id="btnTagStatus_@item.TagId" onclick="ConfirmChangeStatusTag(@item.TagId)" data-url="@Url.Action("ChangeStatus")">
                            <i class="@(item.IsActive?"icon-x-circle":"icon-check-circle")"></i>
                        </a>

                    </td>
                    <td>
                        <div class="td-actions">
                            <a class="btn edit-btn" href="@Url.Action("AddEdit","Tag",new { Id=item.TagId})">
                                <i class="icon-edit"></i>
                            </a>
                            <a class="btn trash-btn" href="#" id="btnTagDelete_@item.TagId" onclick="ConfirmDeleteTag(@item.TagId)" data-url="@Url.Action("DeleteTag")">
                                <i class="icon-trash"></i>
                            </a>

                        </div>
                    </td>


                </tr>
                indexer++;
            }




        </tbody>

    </table>
</div>




@if (ViewBag.type == 1)
{
    @Html.PagedListPager(Model.Tags, page => Url.Action("ListTag", new { page }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
    {
        ActiveLiElementClass = "page-item active",
        PageClasses = new[] { "page-link" },
        UlElementClasses = new[] { "pagination justify-content-center primary" },
        LiElementClasses = new[] { "page-item" }

    },
    new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "divListTag" }))
}
else
{
    @Html.PagedListPager(Model.Tags, page => Url.Action("SearchTag", new { Model.SearchTagVModel.Name, page }),
   PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
   {
       ActiveLiElementClass = "page-item active",
       PageClasses = new[] { "page-link" },
       UlElementClasses = new[] { "pagination justify-content-center primary" },
       LiElementClasses = new[] { "page-item" }

   },
   new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "divListTag" }))
}



