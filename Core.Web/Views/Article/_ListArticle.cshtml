@model IPagedList<ArticleViewModel>

@if (Model.Count() != 0)
{
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-lg-4 col-md-6 col-sm-12">
                @await Html.PartialAsync("~/Views/Shared/ComponentItem/_ArticleItem.cshtml", item)
            </div>
        }

    </div>
}
else
{
    @await Html.PartialAsync("~/Views/Home/_NoData.cshtml", "noarticle")

}




@if (ViewBag.Pagination)
{
    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
            <div class="card">
                <div class="card-body">
                    @Html.PagedListPager(Model, page => Url.Action("ListArticle", new { page }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
    {
     ActiveLiElementClass = "page-item active",
     PageClasses = new[] { "page-link" },
     UlElementClasses = new[] { "pagination rounded success justify-content-center" },
     LiElementClasses = new[] { "page-item" }

    },
    new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "divListArticle" }))
                </div>
            </div>
        </div>
    </div>
}
